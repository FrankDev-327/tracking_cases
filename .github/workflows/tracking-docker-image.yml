name: Tracking CI/CD

on:
  push:
    branches: [ "dev" ]
  schedule:
    - cron: '* 0 * * */5'

jobs:
  install_pnpm_run_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checking Repository
        uses: actions/checkout@v2

      - name: Installing into the environment PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Installing pnpm packages
        run: pnpm install

      - name: Running Test
        run: pnpm run test:cov

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: |
              ./coverage/clover.xml
              !./coverage/lcov-report/*
              !./coverage/lcov.info
          retention-days: 1
          
  display_coverage:
    needs: install_pnpm_run_test
    runs-on: ubuntu-latest

    steps: 
      - name: Downloading test artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Shown resutls
        run: cat clover.xml
    
  build_docker_image:
    needs: install_pnpm_run_test
    runs-on: ubuntu-latest

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER_NAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest


  send-mail:
            runs-on: ubuntu-latest
            needs: build_docker_image
            name: Send email on every cron schedule job
            if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'schedule' }}
            steps:
            - name: Send Mail Action
              id: sendmail
              uses: vineetchoudhary/mailgun-action@master
              with:
                api-key: ${{ secrets.API_KEY }}
                domain: ${{ secrets.DOMAIN }}
                to: ${{ secrets.TO }}
                body: '<p><b>Body</b> - ${{ github.actor }} <br /><br /><b>CronJob</b> - ${{ github.event_name }}.  <br /><br /><b>By</b> - ${{ github.repository }}</p>'
            - name: Send Mail Action Response
              run: echo "${{ steps.sendmail.outputs.response }}"
